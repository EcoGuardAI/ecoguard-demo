{
  "project_path": ".",
  "analysis_time": "2025-06-07T21:37:25.649029+00:00",
  "summary": {
    "total_files": 12,
    "total_issues": 527,
    "by_category": {
      "quality": 306,
      "security": 0,
      "green": 55,
      "ai_code": 166,
      "syntax": 0,
      "system": 0
    },
    "by_severity": {
      "debug": 0,
      "info": 291,
      "warning": 236,
      "error": 0,
      "critical": 0
    },
    "overall_green_score": 68.75,
    "overall_security_score": 100.0
  },
  "file_results": [
    {
      "file_path": "problematic_app.py",
      "analysis_time": "2025-06-07T21:37:25.557328+00:00",
      "summary": {
        "total_issues": 22,
        "critical": 0,
        "error": 0,
        "warning": 10,
        "info": 12,
        "green_score": 25.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'query' is defined but never used",
          "file_path": "problematic_app.py",
          "line": 89,
          "column": 4,
          "end_line": 89,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'query' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _query",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552101+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'processed_data' is defined but never used",
          "file_path": "problematic_app.py",
          "line": 107,
          "column": 4,
          "end_line": 107,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'processed_data' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _processed_data",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552318+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'another_unused' is defined but never used",
          "file_path": "problematic_app.py",
          "line": 139,
          "column": 4,
          "end_line": 139,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'another_unused' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _another_unused",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552400+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "problematic_app.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552773+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "problematic_app.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552777+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'json' is not used",
          "file_path": "problematic_app.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 11,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'json'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552781+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "problematic_app.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552784+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "problematic_app.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552787+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "problematic_app.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552790+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "problematic_app.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552792+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "problematic_app.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552795+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'hashlib' is not used",
          "file_path": "problematic_app.py",
          "line": 145,
          "column": 0,
          "end_line": 145,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'hashlib'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.552799+00:00"
        },
        {
          "rule_id": "too_many_params",
          "category": "quality",
          "severity": "info",
          "message": "Function 'process_user_data' has 8 parameters (max: 5)",
          "file_path": "problematic_app.py",
          "line": 28,
          "column": 0,
          "end_line": 40,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider using a data class or dictionary to group related parameters",
            "replacement_code": "# Group related parameters into a data structure",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": 0.0,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Too Many Parameters",
          "rule_description": "Function has too many parameters",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.553557+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "problematic_app.py",
          "line": 52,
          "column": 28,
          "end_line": 52,
          "end_column": 46,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.553970+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "problematic_app.py",
          "line": 54,
          "column": 28,
          "end_line": 54,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.553979+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "problematic_app.py",
          "line": 56,
          "column": 24,
          "end_line": 56,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.553985+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "problematic_app.py",
          "line": 58,
          "column": 20,
          "end_line": 58,
          "end_column": 38,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.553994+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "problematic_app.py",
          "line": 61,
          "column": 20,
          "end_line": 61,
          "end_column": 40,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.554006+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "problematic_app.py",
          "line": 63,
          "column": 20,
          "end_line": 63,
          "end_column": 34,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.554014+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "problematic_app.py",
          "line": 130,
          "column": 12,
          "end_line": 130,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.554199+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "problematic_app.py",
          "line": 118,
          "column": 11,
          "end_line": 118,
          "end_column": 31,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.555176+00:00"
        },
        {
          "rule_id": "redundant_variable",
          "category": "ai_code",
          "severity": "info",
          "message": "Variable 'user' is assigned and immediately returned",
          "file_path": "problematic_app.py",
          "line": 30,
          "column": 4,
          "end_line": 39,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Return the expression directly without intermediate variable",
            "replacement_code": "# return expression",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.02,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Redundant Variable Assignment",
          "rule_description": "Variable assignment is redundant",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.555983+00:00"
        }
      ],
      "metadata": {
        "file_path": "problematic_app.py",
        "file_size": 4078,
        "line_count": 150
      }
    },
    {
      "file_path": "complex_patterns.py",
      "analysis_time": "2025-06-07T21:37:25.573871+00:00",
      "summary": {
        "total_issues": 48,
        "critical": 0,
        "error": 0,
        "warning": 17,
        "info": 31,
        "green_score": 60.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 26,
          "column": 16,
          "end_line": 26,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.558632+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'query' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 26,
          "column": 22,
          "end_line": 26,
          "end_column": 32,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'query' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _query",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.558637+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'params' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 26,
          "column": 34,
          "end_line": 26,
          "end_column": 47,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'params' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _params",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.558640+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 27,
          "column": 17,
          "end_line": 27,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.558657+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 28,
          "column": 14,
          "end_line": 28,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.558667+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 62,
          "column": 22,
          "end_line": 62,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.558848+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'func' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 88,
          "column": 18,
          "end_line": 88,
          "end_column": 40,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'func' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _func",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.559016+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'retries' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 85,
          "column": 31,
          "end_line": 85,
          "end_column": 43,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'retries' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _retries",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.559021+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'delay' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 85,
          "column": 49,
          "end_line": 85,
          "end_column": 61,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'delay' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _delay",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.559024+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'DATABASE_PASSWORD' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 222,
          "column": 4,
          "end_line": 222,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'DATABASE_PASSWORD' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _DATABASE_PASSWORD",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.559345+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 252,
          "column": 19,
          "end_line": 252,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.559406+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 255,
          "column": 19,
          "end_line": 255,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.559427+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'multiplier' is defined but never used",
          "file_path": "complex_patterns.py",
          "line": 263,
          "column": 23,
          "end_line": 263,
          "end_column": 38,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'multiplier' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _multiplier",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.559488+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "complex_patterns.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560713+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "complex_patterns.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560716+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'json' is not used",
          "file_path": "complex_patterns.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 11,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'json'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560719+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "complex_patterns.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560722+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "complex_patterns.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560725+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "complex_patterns.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560728+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "complex_patterns.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560730+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "complex_patterns.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560733+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'hashlib' is not used",
          "file_path": "complex_patterns.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'hashlib'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560736+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "complex_patterns.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560738+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "complex_patterns.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560741+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sqlite3' is not used",
          "file_path": "complex_patterns.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sqlite3'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560744+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "complex_patterns.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560746+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "complex_patterns.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560749+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "complex_patterns.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560751+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "complex_patterns.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560754+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "complex_patterns.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560757+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "complex_patterns.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560759+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Optional' is not used",
          "file_path": "complex_patterns.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Optional'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560762+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Union' is not used",
          "file_path": "complex_patterns.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Union'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560765+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "complex_patterns.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.560767+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' has complexity 14 (max: 10)",
          "file_path": "complex_patterns.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.561432+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'decorator' has complexity 14 (max: 10)",
          "file_path": "complex_patterns.py",
          "line": 88,
          "column": 4,
          "end_line": 126,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.561621+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'wrapper' has complexity 14 (max: 10)",
          "file_path": "complex_patterns.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.561806+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'complex_data_processor' has complexity 12 (max: 10)",
          "file_path": "complex_patterns.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.562215+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "complex_patterns.py",
          "line": 112,
          "column": 31,
          "end_line": 112,
          "end_column": 76,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.566476+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "complex_patterns.py",
          "line": 136,
          "column": 18,
          "end_line": 152,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.566537+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "complex_patterns.py",
          "line": 144,
          "column": 24,
          "end_line": 148,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.566566+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "complex_patterns.py",
          "line": 256,
          "column": 15,
          "end_line": 256,
          "end_column": 54,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.566876+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "complex_patterns.py",
          "line": 274,
          "column": 19,
          "end_line": 274,
          "end_column": 86,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.566934+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "complex_patterns.py",
          "line": 283,
          "column": 29,
          "end_line": 283,
          "end_column": 61,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.566994+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "complex_patterns.py",
          "line": 284,
          "column": 25,
          "end_line": 284,
          "end_column": 61,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.567009+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "complex_patterns.py",
          "line": 226,
          "column": 13,
          "end_line": 226,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.567875+00:00"
        },
        {
          "rule_id": "redundant_variable",
          "category": "ai_code",
          "severity": "info",
          "message": "Variable 'query' is assigned and immediately returned",
          "file_path": "complex_patterns.py",
          "line": 212,
          "column": 8,
          "end_line": 212,
          "end_column": 59,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Return the expression directly without intermediate variable",
            "replacement_code": "# return expression",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.02,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Redundant Variable Assignment",
          "rule_description": "Variable assignment is redundant",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.570697+00:00"
        },
        {
          "rule_id": "redundant_variable",
          "category": "ai_code",
          "severity": "info",
          "message": "Variable 'command' is assigned and immediately returned",
          "file_path": "complex_patterns.py",
          "line": 217,
          "column": 8,
          "end_line": 217,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Return the expression directly without intermediate variable",
            "replacement_code": "# return expression",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.02,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Redundant Variable Assignment",
          "rule_description": "Variable assignment is redundant",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.570713+00:00"
        }
      ],
      "metadata": {
        "file_path": "complex_patterns.py",
        "file_size": 11469,
        "line_count": 333
      }
    },
    {
      "file_path": "ast_showcase.py",
      "analysis_time": "2025-06-07T21:37:25.585107+00:00",
      "summary": {
        "total_issues": 35,
        "critical": 0,
        "error": 0,
        "warning": 7,
        "info": 28,
        "green_score": 55.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "ast_showcase.py",
          "line": 35,
          "column": 19,
          "end_line": 35,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.575427+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "ast_showcase.py",
          "line": 50,
          "column": 19,
          "end_line": 50,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.575479+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "ast_showcase.py",
          "line": 61,
          "column": 28,
          "end_line": 61,
          "end_column": 32,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.575613+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'content' is defined but never used",
          "file_path": "ast_showcase.py",
          "line": 122,
          "column": 8,
          "end_line": 122,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'content' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _content",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.575827+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'func' is defined but never used",
          "file_path": "ast_showcase.py",
          "line": 160,
          "column": 24,
          "end_line": 160,
          "end_column": 28,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'func' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _func",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.575876+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "ast_showcase.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576665+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "ast_showcase.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576668+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'json' is not used",
          "file_path": "ast_showcase.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 11,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'json'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576671+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "ast_showcase.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576674+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "ast_showcase.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576676+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "ast_showcase.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576679+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "ast_showcase.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576682+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "ast_showcase.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576684+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'hashlib' is not used",
          "file_path": "ast_showcase.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'hashlib'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576687+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "ast_showcase.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576690+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "ast_showcase.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576692+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sqlite3' is not used",
          "file_path": "ast_showcase.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sqlite3'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576695+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "ast_showcase.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576697+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "ast_showcase.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576700+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "ast_showcase.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576702+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "ast_showcase.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576705+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "ast_showcase.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576708+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "ast_showcase.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576710+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "ast_showcase.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576713+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "ast_showcase.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576716+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "ast_showcase.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576718+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "ast_showcase.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.576721+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "ast_showcase.py",
          "line": 148,
          "column": 8,
          "end_line": 148,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.579096+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "ast_showcase.py",
          "line": 150,
          "column": 12,
          "end_line": 150,
          "end_column": 29,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.579108+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "ast_showcase.py",
          "line": 59,
          "column": 15,
          "end_line": 59,
          "end_column": 73,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.580013+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "ast_showcase.py",
          "line": 89,
          "column": 18,
          "end_line": 89,
          "end_column": 77,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.580126+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "ast_showcase.py",
          "line": 101,
          "column": 24,
          "end_line": 105,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.580171+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "ast_showcase.py",
          "line": 102,
          "column": 8,
          "end_line": 102,
          "end_column": 59,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.580174+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "ast_showcase.py",
          "line": 119,
          "column": 13,
          "end_line": 119,
          "end_column": 37,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.580820+00:00"
        },
        {
          "rule_id": "verbose_ai_code",
          "category": "ai_code",
          "severity": "info",
          "message": "Redundant nested if statements can be combined with 'and'",
          "file_path": "ast_showcase.py",
          "line": 74,
          "column": 20,
          "end_line": 76,
          "end_column": 46,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Combine conditions with 'and' operator",
            "replacement_code": "# if condition1 and condition2:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Verbose AI-Generated Code",
          "rule_description": "Code pattern appears verbose and could be simplified",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.581896+00:00"
        }
      ],
      "metadata": {
        "file_path": "ast_showcase.py",
        "file_size": 6308,
        "line_count": 232
      }
    },
    {
      "file_path": "quality_issues.py",
      "analysis_time": "2025-06-07T21:37:25.587338+00:00",
      "summary": {
        "total_issues": 26,
        "critical": 0,
        "error": 0,
        "warning": 2,
        "info": 24,
        "green_score": 100.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'unused_var' is defined but never used",
          "file_path": "quality_issues.py",
          "line": 43,
          "column": 4,
          "end_line": 43,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'unused_var' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _unused_var",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585469+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'another_unused' is defined but never used",
          "file_path": "quality_issues.py",
          "line": 44,
          "column": 4,
          "end_line": 44,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'another_unused' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _another_unused",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585480+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "quality_issues.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585629+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "quality_issues.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585632+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'json' is not used",
          "file_path": "quality_issues.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 11,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'json'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585634+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "quality_issues.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585637+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585640+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "quality_issues.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585643+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "quality_issues.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585645+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "quality_issues.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585648+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'hashlib' is not used",
          "file_path": "quality_issues.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'hashlib'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585651+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "quality_issues.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585653+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "quality_issues.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585656+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sqlite3' is not used",
          "file_path": "quality_issues.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sqlite3'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585659+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "quality_issues.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585661+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "quality_issues.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585665+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585668+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585670+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "quality_issues.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585673+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "quality_issues.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585676+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "quality_issues.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585679+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "quality_issues.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585681+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "quality_issues.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585684+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "quality_issues.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585687+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "quality_issues.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585689+00:00"
        },
        {
          "rule_id": "too_many_params",
          "category": "quality",
          "severity": "info",
          "message": "Function 'function_with_too_many_params' has 10 parameters (max: 5)",
          "file_path": "quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 14,
          "end_column": 48,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider using a data class or dictionary to group related parameters",
            "replacement_code": "# Group related parameters into a data structure",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": 0.0,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Too Many Parameters",
          "rule_description": "Function has too many parameters",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.585946+00:00"
        }
      ],
      "metadata": {
        "file_path": "quality_issues.py",
        "file_size": 1500,
        "line_count": 65
      }
    },
    {
      "file_path": "clean_code.py",
      "analysis_time": "2025-06-07T21:37:25.592843+00:00",
      "summary": {
        "total_issues": 25,
        "critical": 0,
        "error": 0,
        "warning": 0,
        "info": 25,
        "green_score": 90.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "clean_code.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588515+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "clean_code.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588519+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'json' is not used",
          "file_path": "clean_code.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 11,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'json'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588522+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "clean_code.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588524+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "clean_code.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588527+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "clean_code.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588530+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "clean_code.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588533+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "clean_code.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588535+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'hashlib' is not used",
          "file_path": "clean_code.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'hashlib'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588538+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "clean_code.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588541+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "clean_code.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588543+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sqlite3' is not used",
          "file_path": "clean_code.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sqlite3'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588546+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "clean_code.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588548+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "clean_code.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588551+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "clean_code.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588554+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "clean_code.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588556+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "clean_code.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588559+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "clean_code.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588562+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "clean_code.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588569+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "clean_code.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588572+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "clean_code.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588574+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "clean_code.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588577+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "clean_code.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.588580+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "clean_code.py",
          "line": 62,
          "column": 15,
          "end_line": 65,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.590320+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "clean_code.py",
          "line": 78,
          "column": 22,
          "end_line": 78,
          "end_column": 43,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.590669+00:00"
        }
      ],
      "metadata": {
        "file_path": "clean_code.py",
        "file_size": 3456,
        "line_count": 129
      }
    },
    {
      "file_path": "sample-code/complex/complex_patterns.py",
      "analysis_time": "2025-06-07T21:37:25.609498+00:00",
      "summary": {
        "total_issues": 58,
        "critical": 0,
        "error": 0,
        "warning": 25,
        "info": 33,
        "green_score": 60.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 26,
          "column": 16,
          "end_line": 26,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594092+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'query' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 26,
          "column": 22,
          "end_line": 26,
          "end_column": 32,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'query' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _query",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594096+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'params' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 26,
          "column": 34,
          "end_line": 26,
          "end_column": 47,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'params' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _params",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594099+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 27,
          "column": 17,
          "end_line": 27,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594115+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 28,
          "column": 14,
          "end_line": 28,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594125+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 62,
          "column": 22,
          "end_line": 62,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594300+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'func' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 88,
          "column": 18,
          "end_line": 88,
          "end_column": 40,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'func' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _func",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594474+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'retries' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 85,
          "column": 31,
          "end_line": 85,
          "end_column": 43,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'retries' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _retries",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594480+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'delay' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 85,
          "column": 49,
          "end_line": 85,
          "end_column": 61,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'delay' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _delay",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594483+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'DATABASE_PASSWORD' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 222,
          "column": 4,
          "end_line": 222,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'DATABASE_PASSWORD' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _DATABASE_PASSWORD",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594803+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 252,
          "column": 19,
          "end_line": 252,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594864+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 255,
          "column": 19,
          "end_line": 255,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594885+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'multiplier' is defined but never used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 263,
          "column": 23,
          "end_line": 263,
          "end_column": 38,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'multiplier' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _multiplier",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.594946+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596140+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596144+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'json' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 11,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'json'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596147+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596149+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596152+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596155+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596157+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596160+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'hashlib' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'hashlib'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596163+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596165+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596168+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sqlite3' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sqlite3'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596170+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596173+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596175+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596178+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596181+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596183+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596186+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596189+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596191+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596194+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596197+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596199+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' has complexity 14 (max: 10)",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.596842+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'decorator' has complexity 14 (max: 10)",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 88,
          "column": 4,
          "end_line": 126,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.597030+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'wrapper' has complexity 14 (max: 10)",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.597198+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'complex_data_processor' has complexity 12 (max: 10)",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.597603+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 112,
          "column": 31,
          "end_line": 112,
          "end_column": 76,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.601910+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 136,
          "column": 18,
          "end_line": 152,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.601971+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 144,
          "column": 24,
          "end_line": 148,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.601999+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 256,
          "column": 15,
          "end_line": 256,
          "end_column": 54,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.602307+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 274,
          "column": 19,
          "end_line": 274,
          "end_column": 86,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.602357+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 283,
          "column": 29,
          "end_line": 283,
          "end_column": 61,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.602382+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 284,
          "column": 25,
          "end_line": 284,
          "end_column": 61,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.602391+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 226,
          "column": 13,
          "end_line": 226,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.603178+00:00"
        },
        {
          "rule_id": "redundant_variable",
          "category": "ai_code",
          "severity": "info",
          "message": "Variable 'query' is assigned and immediately returned",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 212,
          "column": 8,
          "end_line": 212,
          "end_column": 59,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Return the expression directly without intermediate variable",
            "replacement_code": "# return expression",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.02,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Redundant Variable Assignment",
          "rule_description": "Variable assignment is redundant",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.605971+00:00"
        },
        {
          "rule_id": "redundant_variable",
          "category": "ai_code",
          "severity": "info",
          "message": "Variable 'command' is assigned and immediately returned",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 217,
          "column": 8,
          "end_line": 217,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Return the expression directly without intermediate variable",
            "replacement_code": "# return expression",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.02,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Redundant Variable Assignment",
          "rule_description": "Variable assignment is redundant",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.605986+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 34,
          "column": 4,
          "end_line": 38,
          "end_column": 53,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607334+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to 'add_processor'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607346+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_should_yield' appears similar to '_should_yield'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 62,
          "column": 4,
          "end_line": 82,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607367+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' appears similar to 'advanced_decorator_factory'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607378+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607396+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_data_processor' appears similar to 'complex_data_processor'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607405+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'potential_security_issues' appears similar to 'potential_security_issues'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 207,
          "column": 0,
          "end_line": 234,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607414+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_async_simulation' appears similar to 'complex_async_simulation'",
          "file_path": "sample-code/complex/complex_patterns.py",
          "line": 259,
          "column": 0,
          "end_line": 297,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.607461+00:00"
        }
      ],
      "metadata": {
        "file_path": "sample-code/complex/complex_patterns.py",
        "file_size": 11469,
        "line_count": 333
      }
    },
    {
      "file_path": "sample-code/complex/ast_showcase.py",
      "analysis_time": "2025-06-07T21:37:25.620350+00:00",
      "summary": {
        "total_issues": 53,
        "critical": 0,
        "error": 0,
        "warning": 24,
        "info": 29,
        "green_score": 55.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 35,
          "column": 19,
          "end_line": 35,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.610383+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 50,
          "column": 19,
          "end_line": 50,
          "end_column": 23,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.610431+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 61,
          "column": 28,
          "end_line": 61,
          "end_column": 32,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.610564+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'content' is defined but never used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 122,
          "column": 8,
          "end_line": 122,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'content' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _content",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.610778+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'func' is defined but never used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 160,
          "column": 24,
          "end_line": 160,
          "end_column": 28,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'func' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _func",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.610842+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611652+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611655+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'json' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 11,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'json'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611657+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611660+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611663+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611666+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611669+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611671+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'hashlib' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'hashlib'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611674+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611677+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611679+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sqlite3' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sqlite3'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611682+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611684+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611687+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611690+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611692+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611699+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611701+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611704+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611707+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611709+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611712+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.611715+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 148,
          "column": 8,
          "end_line": 148,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.614096+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 150,
          "column": 12,
          "end_line": 150,
          "end_column": 29,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.614108+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 59,
          "column": 15,
          "end_line": 59,
          "end_column": 73,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.615029+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 89,
          "column": 18,
          "end_line": 89,
          "end_column": 77,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.615145+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 101,
          "column": 24,
          "end_line": 105,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.615191+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 102,
          "column": 8,
          "end_line": 102,
          "end_column": 59,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.615195+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 119,
          "column": 13,
          "end_line": 119,
          "end_column": 37,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.615857+00:00"
        },
        {
          "rule_id": "verbose_ai_code",
          "category": "ai_code",
          "severity": "info",
          "message": "Redundant nested if statements can be combined with 'and'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 74,
          "column": 20,
          "end_line": 76,
          "end_column": 46,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Combine conditions with 'and' operator",
            "replacement_code": "# if condition1 and condition2:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Verbose AI-Generated Code",
          "rule_description": "Code pattern appears verbose and could be simplified",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.616927+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 34,
          "column": 4,
          "end_line": 38,
          "end_column": 53,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618712+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to 'add_processor'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618727+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_should_yield' appears similar to '_should_yield'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 62,
          "column": 4,
          "end_line": 82,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618750+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' appears similar to 'advanced_decorator_factory'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618763+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618784+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_data_processor' appears similar to 'complex_data_processor'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618795+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'potential_security_issues' appears similar to 'potential_security_issues'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 207,
          "column": 0,
          "end_line": 234,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618806+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_async_simulation' appears similar to 'complex_async_simulation'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 259,
          "column": 0,
          "end_line": 297,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618865+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 45,
          "column": 4,
          "end_line": 48,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618934+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 61,
          "column": 4,
          "end_line": 81,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618963+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'functional_programming_example' appears similar to 'functional_programming_example'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 84,
          "column": 0,
          "end_line": 111,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618972+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'async_patterns_showcase' appears similar to 'async_patterns_showcase'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 114,
          "column": 0,
          "end_line": 154,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618980+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'decorator_examples' appears similar to 'decorator_examples'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 157,
          "column": 0,
          "end_line": 177,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618988+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'timer_decorator' appears similar to 'timer_decorator'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 160,
          "column": 4,
          "end_line": 169,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.618996+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 162,
          "column": 8,
          "end_line": 168,
          "end_column": 25,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.619004+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'slow_function' appears similar to 'slow_function'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 172,
          "column": 4,
          "end_line": 175,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.619013+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/complex/ast_showcase.py",
          "line": 190,
          "column": 0,
          "end_line": 228,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.619020+00:00"
        }
      ],
      "metadata": {
        "file_path": "sample-code/complex/ast_showcase.py",
        "file_size": 6308,
        "line_count": 232
      }
    },
    {
      "file_path": "sample-code/real-world/web_api_example.py",
      "analysis_time": "2025-06-07T21:37:25.630815+00:00",
      "summary": {
        "total_issues": 48,
        "critical": 0,
        "error": 0,
        "warning": 26,
        "info": 22,
        "green_score": 70.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 137,
          "column": 26,
          "end_line": 137,
          "end_column": 30,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.621607+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 150,
          "column": 21,
          "end_line": 150,
          "end_column": 25,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.621634+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'self' is defined but never used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 168,
          "column": 35,
          "end_line": 168,
          "end_column": 39,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'self' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _self",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.621741+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622401+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622404+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622407+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622410+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622412+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622415+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622418+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622420+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622423+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622425+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622428+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622431+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622433+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622436+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622438+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622441+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622444+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622446+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622449+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.622451+00:00"
        },
        {
          "rule_id": "function_complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function 'process_user_request' has complexity 11 (max: 10)",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 102,
          "column": 4,
          "end_line": 135,
          "end_column": 51,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider breaking this function into smaller functions",
            "replacement_code": "# Refactor into smaller, more focused functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.3,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "High Function Complexity",
          "rule_description": "Function has high cyclomatic complexity",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.623177+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 183,
          "column": 20,
          "end_line": 183,
          "end_column": 41,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.624847+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 184,
          "column": 16,
          "end_line": 184,
          "end_column": 51,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.624854+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 42,
          "column": 24,
          "end_line": 42,
          "end_column": 62,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.625582+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 50,
          "column": 24,
          "end_line": 50,
          "end_column": 62,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.625624+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 34,
          "column": 4,
          "end_line": 38,
          "end_column": 53,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629089+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to 'add_processor'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629104+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629112+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_should_yield' appears similar to '_should_yield'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 62,
          "column": 4,
          "end_line": 82,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629133+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' appears similar to 'advanced_decorator_factory'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629147+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629171+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_data_processor' appears similar to 'complex_data_processor'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629184+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'potential_security_issues' appears similar to 'potential_security_issues'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 207,
          "column": 0,
          "end_line": 234,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629196+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_async_simulation' appears similar to 'complex_async_simulation'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 259,
          "column": 0,
          "end_line": 297,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629264+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 45,
          "column": 4,
          "end_line": 48,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629343+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 61,
          "column": 4,
          "end_line": 81,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629376+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'functional_programming_example' appears similar to 'functional_programming_example'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 84,
          "column": 0,
          "end_line": 111,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629387+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'async_patterns_showcase' appears similar to 'async_patterns_showcase'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 114,
          "column": 0,
          "end_line": 154,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629396+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'decorator_examples' appears similar to 'decorator_examples'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 157,
          "column": 0,
          "end_line": 177,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629405+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'timer_decorator' appears similar to 'timer_decorator'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 160,
          "column": 4,
          "end_line": 169,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629415+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 162,
          "column": 8,
          "end_line": 168,
          "end_column": 25,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629424+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'slow_function' appears similar to 'slow_function'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 172,
          "column": 4,
          "end_line": 175,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629434+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 190,
          "column": 0,
          "end_line": 228,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629443+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629547+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'get_user_by_id' appears similar to 'safe_get_user_by_email'",
          "file_path": "sample-code/real-world/web_api_example.py",
          "line": 35,
          "column": 4,
          "end_line": 42,
          "end_column": 92,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.629650+00:00"
        }
      ],
      "metadata": {
        "file_path": "sample-code/real-world/web_api_example.py",
        "file_size": 8011,
        "line_count": 207
      }
    },
    {
      "file_path": "sample-code/simple/problematic_app.py",
      "analysis_time": "2025-06-07T21:37:25.637213+00:00",
      "summary": {
        "total_issues": 59,
        "critical": 0,
        "error": 0,
        "warning": 36,
        "info": 23,
        "green_score": 25.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'query' is defined but never used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 89,
          "column": 4,
          "end_line": 89,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'query' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _query",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631473+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'processed_data' is defined but never used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 107,
          "column": 4,
          "end_line": 107,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'processed_data' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _processed_data",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631544+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'another_unused' is defined but never used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 139,
          "column": 4,
          "end_line": 139,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'another_unused' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _another_unused",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631622+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631986+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631989+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631991+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631994+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.631997+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632000+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632002+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632005+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632008+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632010+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632013+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632015+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632018+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632020+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632023+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632026+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632028+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632031+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632034+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632036+00:00"
        },
        {
          "rule_id": "too_many_params",
          "category": "quality",
          "severity": "info",
          "message": "Function 'process_user_data' has 8 parameters (max: 5)",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 28,
          "column": 0,
          "end_line": 40,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider using a data class or dictionary to group related parameters",
            "replacement_code": "# Group related parameters into a data structure",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": 0.0,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Too Many Parameters",
          "rule_description": "Function has too many parameters",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.632748+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 52,
          "column": 28,
          "end_line": 52,
          "end_column": 46,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.633136+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 54,
          "column": 28,
          "end_line": 54,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.633144+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 56,
          "column": 24,
          "end_line": 56,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.633150+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 58,
          "column": 20,
          "end_line": 58,
          "end_column": 38,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.633157+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 61,
          "column": 20,
          "end_line": 61,
          "end_column": 40,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.633169+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 63,
          "column": 20,
          "end_line": 63,
          "end_column": 34,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.633176+00:00"
        },
        {
          "rule_id": "inefficient_string_concat",
          "category": "green",
          "severity": "warning",
          "message": "String concatenation in loop is inefficient. Use join() or f-strings instead",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 130,
          "column": 12,
          "end_line": 130,
          "end_column": 42,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use ''.join() for concatenating strings in loops",
            "replacement_code": "# Use parts = []; parts.append(item); result = ''.join(parts)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.15,
            "security_risk": 0.0,
            "carbon_impact": 5.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Inefficient String Concatenation",
          "rule_description": "String concatenation in loop is inefficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.633344+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 118,
          "column": 11,
          "end_line": 118,
          "end_column": 31,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.634382+00:00"
        },
        {
          "rule_id": "redundant_variable",
          "category": "ai_code",
          "severity": "info",
          "message": "Variable 'user' is assigned and immediately returned",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 30,
          "column": 4,
          "end_line": 39,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Return the expression directly without intermediate variable",
            "replacement_code": "# return expression",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.02,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": 0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Redundant Variable Assignment",
          "rule_description": "Variable assignment is redundant",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635139+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_user_data' appears similar to 'process_user_data'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 28,
          "column": 0,
          "end_line": 40,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635793+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 43,
          "column": 0,
          "end_line": 66,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635807+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'create_user' appears similar to 'create_user'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 70,
          "column": 0,
          "end_line": 91,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635822+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'search_users' appears similar to 'search_users'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 95,
          "column": 0,
          "end_line": 109,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635838+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_file' appears similar to 'process_file'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 113,
          "column": 0,
          "end_line": 133,
          "end_column": 56,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635851+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'unused_function' appears similar to 'unused_function'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 136,
          "column": 0,
          "end_line": 140,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635865+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 34,
          "column": 4,
          "end_line": 38,
          "end_column": 53,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635909+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to 'add_processor'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635924+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635932+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_should_yield' appears similar to '_should_yield'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 62,
          "column": 4,
          "end_line": 82,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635956+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' appears similar to 'advanced_decorator_factory'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635971+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.635996+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_data_processor' appears similar to 'complex_data_processor'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636010+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'potential_security_issues' appears similar to 'potential_security_issues'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 207,
          "column": 0,
          "end_line": 234,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636023+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_async_simulation' appears similar to 'complex_async_simulation'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 259,
          "column": 0,
          "end_line": 297,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636096+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 45,
          "column": 4,
          "end_line": 48,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636184+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 61,
          "column": 4,
          "end_line": 81,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636220+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'functional_programming_example' appears similar to 'functional_programming_example'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 84,
          "column": 0,
          "end_line": 111,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636231+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'async_patterns_showcase' appears similar to 'async_patterns_showcase'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 114,
          "column": 0,
          "end_line": 154,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636242+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'decorator_examples' appears similar to 'decorator_examples'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 157,
          "column": 0,
          "end_line": 177,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636253+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'timer_decorator' appears similar to 'timer_decorator'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 160,
          "column": 4,
          "end_line": 169,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636264+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 162,
          "column": 8,
          "end_line": 168,
          "end_column": 25,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636273+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'slow_function' appears similar to 'slow_function'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 172,
          "column": 4,
          "end_line": 175,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636284+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 190,
          "column": 0,
          "end_line": 228,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636295+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636411+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'get_user_by_id' appears similar to 'safe_get_user_by_email'",
          "file_path": "sample-code/simple/problematic_app.py",
          "line": 35,
          "column": 4,
          "end_line": 42,
          "end_column": 92,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.636536+00:00"
        }
      ],
      "metadata": {
        "file_path": "sample-code/simple/problematic_app.py",
        "file_size": 4078,
        "line_count": 150
      }
    },
    {
      "file_path": "sample-code/simple/basic_functions.py",
      "analysis_time": "2025-06-07T21:37:25.639680+00:00",
      "summary": {
        "total_issues": 47,
        "critical": 0,
        "error": 0,
        "warning": 26,
        "info": 21,
        "green_score": 95.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637587+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 8,
          "column": 0,
          "end_line": 8,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637591+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637594+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637597+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637599+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637602+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637605+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637608+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637610+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637613+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637615+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637618+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637621+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637623+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637626+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637629+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637632+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637634+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637637+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.637640+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 23,
          "column": 11,
          "end_line": 23,
          "end_column": 50,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638139+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_user_data' appears similar to 'process_user_data'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 28,
          "column": 0,
          "end_line": 40,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638661+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 43,
          "column": 0,
          "end_line": 66,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638676+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'create_user' appears similar to 'create_user'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 70,
          "column": 0,
          "end_line": 91,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638690+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'search_users' appears similar to 'search_users'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 95,
          "column": 0,
          "end_line": 109,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638705+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_file' appears similar to 'process_file'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 113,
          "column": 0,
          "end_line": 133,
          "end_column": 56,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638719+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'unused_function' appears similar to 'unused_function'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 136,
          "column": 0,
          "end_line": 140,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638733+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 34,
          "column": 4,
          "end_line": 38,
          "end_column": 53,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638778+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to 'add_processor'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638793+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638803+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_should_yield' appears similar to '_should_yield'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 62,
          "column": 4,
          "end_line": 82,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638827+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' appears similar to 'advanced_decorator_factory'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638843+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638869+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_data_processor' appears similar to 'complex_data_processor'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638883+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'potential_security_issues' appears similar to 'potential_security_issues'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 207,
          "column": 0,
          "end_line": 234,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638896+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_async_simulation' appears similar to 'complex_async_simulation'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 259,
          "column": 0,
          "end_line": 297,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.638972+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 45,
          "column": 4,
          "end_line": 48,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639061+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 61,
          "column": 4,
          "end_line": 81,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639098+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'functional_programming_example' appears similar to 'functional_programming_example'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 84,
          "column": 0,
          "end_line": 111,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639110+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'async_patterns_showcase' appears similar to 'async_patterns_showcase'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 114,
          "column": 0,
          "end_line": 154,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639120+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'decorator_examples' appears similar to 'decorator_examples'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 157,
          "column": 0,
          "end_line": 177,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639131+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'timer_decorator' appears similar to 'timer_decorator'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 160,
          "column": 4,
          "end_line": 169,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639142+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 162,
          "column": 8,
          "end_line": 168,
          "end_column": 25,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639152+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'slow_function' appears similar to 'slow_function'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 172,
          "column": 4,
          "end_line": 175,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639164+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 190,
          "column": 0,
          "end_line": 228,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639173+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639297+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'get_user_by_id' appears similar to 'safe_get_user_by_email'",
          "file_path": "sample-code/simple/basic_functions.py",
          "line": 35,
          "column": 4,
          "end_line": 42,
          "end_column": 92,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639437+00:00"
        }
      ],
      "metadata": {
        "file_path": "sample-code/simple/basic_functions.py",
        "file_size": 911,
        "line_count": 30
      }
    },
    {
      "file_path": "sample-code/simple/quality_issues.py",
      "analysis_time": "2025-06-07T21:37:25.642552+00:00",
      "summary": {
        "total_issues": 51,
        "critical": 0,
        "error": 0,
        "warning": 30,
        "info": 21,
        "green_score": 100.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'unused_var' is defined but never used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 43,
          "column": 4,
          "end_line": 43,
          "end_column": 14,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'unused_var' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _unused_var",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639951+00:00"
        },
        {
          "rule_id": "unused_variable",
          "category": "quality",
          "severity": "warning",
          "message": "Variable 'another_unused' is defined but never used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 44,
          "column": 4,
          "end_line": 44,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused variable 'another_unused' or prefix with underscore if intentional",
            "replacement_code": "# Remove line or rename to _another_unused",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Variable",
          "rule_description": "Variable is defined but never used",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.639954+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640103+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640106+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640109+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640112+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640115+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640118+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640120+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640123+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640126+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640128+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640131+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640134+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640136+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640139+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640142+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640145+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640147+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640150+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640153+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640155+00:00"
        },
        {
          "rule_id": "too_many_params",
          "category": "quality",
          "severity": "info",
          "message": "Function 'function_with_too_many_params' has 10 parameters (max: 5)",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 12,
          "column": 0,
          "end_line": 14,
          "end_column": 48,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider using a data class or dictionary to group related parameters",
            "replacement_code": "# Group related parameters into a data structure",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": 0.0,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.5,
            "cost_impact": 0.0
          },
          "rule_name": "Too Many Parameters",
          "rule_description": "Function has too many parameters",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.640408+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_user_data' appears similar to 'process_user_data'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 28,
          "column": 0,
          "end_line": 40,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641452+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 43,
          "column": 0,
          "end_line": 66,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641468+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'create_user' appears similar to 'create_user'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 70,
          "column": 0,
          "end_line": 91,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641482+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'search_users' appears similar to 'search_users'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 95,
          "column": 0,
          "end_line": 109,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641498+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_file' appears similar to 'process_file'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 113,
          "column": 0,
          "end_line": 133,
          "end_column": 56,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641512+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'unused_function' appears similar to 'unused_function'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 136,
          "column": 0,
          "end_line": 140,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641526+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 34,
          "column": 4,
          "end_line": 38,
          "end_column": 53,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641573+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to 'add_processor'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641588+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641596+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_should_yield' appears similar to '_should_yield'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 62,
          "column": 4,
          "end_line": 82,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641621+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' appears similar to 'advanced_decorator_factory'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641637+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641666+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_data_processor' appears similar to 'complex_data_processor'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641681+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'potential_security_issues' appears similar to 'potential_security_issues'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 207,
          "column": 0,
          "end_line": 234,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641694+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_async_simulation' appears similar to 'complex_async_simulation'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 259,
          "column": 0,
          "end_line": 297,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641774+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 45,
          "column": 4,
          "end_line": 48,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641868+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 61,
          "column": 4,
          "end_line": 81,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641906+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'functional_programming_example' appears similar to 'functional_programming_example'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 84,
          "column": 0,
          "end_line": 111,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641918+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'async_patterns_showcase' appears similar to 'async_patterns_showcase'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 114,
          "column": 0,
          "end_line": 154,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641929+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'decorator_examples' appears similar to 'decorator_examples'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 157,
          "column": 0,
          "end_line": 177,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641940+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'timer_decorator' appears similar to 'timer_decorator'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 160,
          "column": 4,
          "end_line": 169,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641952+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 162,
          "column": 8,
          "end_line": 168,
          "end_column": 25,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641963+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'slow_function' appears similar to 'slow_function'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 172,
          "column": 4,
          "end_line": 175,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641975+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 190,
          "column": 0,
          "end_line": 228,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.641986+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'function_with_unused_vars' appears similar to 'function_with_unused_vars'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 40,
          "column": 0,
          "end_line": 48,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.642015+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 58,
          "column": 0,
          "end_line": 61,
          "end_column": 31,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.642027+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.642124+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'get_user_by_id' appears similar to 'safe_get_user_by_email'",
          "file_path": "sample-code/simple/quality_issues.py",
          "line": 35,
          "column": 4,
          "end_line": 42,
          "end_column": 92,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.642280+00:00"
        }
      ],
      "metadata": {
        "file_path": "sample-code/simple/quality_issues.py",
        "file_size": 1500,
        "line_count": 65
      }
    },
    {
      "file_path": "sample-code/simple/clean_code.py",
      "analysis_time": "2025-06-07T21:37:25.649018+00:00",
      "summary": {
        "total_issues": 55,
        "critical": 0,
        "error": 0,
        "warning": 33,
        "info": 22,
        "green_score": 90.0,
        "security_score": 100.0
      },
      "issues": [
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'os' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'os'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643789+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'sys' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'sys'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643792+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'requests' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'requests'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643796+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'np' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 18,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'np'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643799+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'render_template' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 14,
          "column": 0,
          "end_line": 14,
          "end_column": 58,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'render_template'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643802+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'generate_password_hash' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 15,
          "column": 0,
          "end_line": 15,
          "end_column": 52,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'generate_password_hash'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643805+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'datetime' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 144,
          "column": 0,
          "end_line": 144,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'datetime'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643807+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ast' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 6,
          "column": 0,
          "end_line": 6,
          "end_column": 10,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ast'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643810+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 're' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 7,
          "column": 0,
          "end_line": 7,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 're'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643813+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'subprocess' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 10,
          "column": 0,
          "end_line": 10,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'subprocess'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643816+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Path' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Path'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643818+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'reduce' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'reduce'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643821+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'partial' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 12,
          "column": 0,
          "end_line": 12,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'partial'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643824+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'ThreadPoolExecutor' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'ThreadPoolExecutor'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643827+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'as_completed' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 13,
          "column": 0,
          "end_line": 13,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'as_completed'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643829+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Set' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 14,
          "column": 0,
          "end_line": 17,
          "end_column": 1,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Set'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643832+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'itertools' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 16,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'itertools'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643837+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'defaultdict' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'defaultdict'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643840+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'Counter' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 11,
          "column": 0,
          "end_line": 11,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'Counter'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643843+00:00"
        },
        {
          "rule_id": "unused_import",
          "category": "quality",
          "severity": "info",
          "message": "Import 'unused_module' is not used",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 9,
          "column": 0,
          "end_line": 9,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Remove unused import 'unused_module'",
            "replacement_code": "# Remove import line",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.2,
            "cost_impact": 0.0
          },
          "rule_name": "Unused Import",
          "rule_description": "Import statement is not used in the module",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.643846+00:00"
        },
        {
          "rule_id": "use_generator",
          "category": "green",
          "severity": "info",
          "message": "Consider using generator expression instead of list comprehension for single use",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 62,
          "column": 15,
          "end_line": 65,
          "end_column": 9,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Replace [] with () to create generator",
            "replacement_code": "# Change [expr for item in iterable] to (expr for item in iterable)",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.1,
            "security_risk": 0.0,
            "carbon_impact": 2.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "Use Generator Expression",
          "rule_description": "Consider using generator for memory efficiency",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.645647+00:00"
        },
        {
          "rule_id": "file_handling_efficiency",
          "category": "green",
          "severity": "info",
          "message": "Use 'with open()' for automatic file closing",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 78,
          "column": 22,
          "end_line": 78,
          "end_column": 43,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Use context manager (with statement) for file handling",
            "replacement_code": "# with open(filename) as f:",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 1.0,
            "maintainability": 0.0,
            "cost_impact": 0.0
          },
          "rule_name": "File Handling Efficiency",
          "rule_description": "File handling could be more efficient",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.646007+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_user_data' appears similar to 'process_user_data'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 28,
          "column": 0,
          "end_line": 40,
          "end_column": 15,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647416+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 43,
          "column": 0,
          "end_line": 66,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647432+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'create_user' appears similar to 'create_user'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 70,
          "column": 0,
          "end_line": 91,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647448+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'search_users' appears similar to 'search_users'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 95,
          "column": 0,
          "end_line": 109,
          "end_column": 63,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647464+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_file' appears similar to 'process_file'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 113,
          "column": 0,
          "end_line": 133,
          "end_column": 56,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647479+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'unused_function' appears similar to 'unused_function'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 136,
          "column": 0,
          "end_line": 140,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647494+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 34,
          "column": 4,
          "end_line": 38,
          "end_column": 53,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647543+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to 'add_processor'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647559+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647567+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_should_yield' appears similar to '_should_yield'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 62,
          "column": 4,
          "end_line": 82,
          "end_column": 35,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647595+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'advanced_decorator_factory' appears similar to 'advanced_decorator_factory'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 85,
          "column": 0,
          "end_line": 127,
          "end_column": 20,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647612+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 90,
          "column": 8,
          "end_line": 124,
          "end_column": 65,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647643+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_data_processor' appears similar to 'complex_data_processor'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 131,
          "column": 0,
          "end_line": 204,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647658+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'potential_security_issues' appears similar to 'potential_security_issues'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 207,
          "column": 0,
          "end_line": 234,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647672+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_async_simulation' appears similar to 'complex_async_simulation'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 259,
          "column": 0,
          "end_line": 297,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647757+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__init__' appears similar to '__init__'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 45,
          "column": 4,
          "end_line": 48,
          "end_column": 24,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647857+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'complex_calculation' appears similar to 'complex_calculation'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 61,
          "column": 4,
          "end_line": 81,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647898+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'functional_programming_example' appears similar to 'functional_programming_example'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 84,
          "column": 0,
          "end_line": 111,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647911+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'async_patterns_showcase' appears similar to 'async_patterns_showcase'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 114,
          "column": 0,
          "end_line": 154,
          "end_column": 17,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647923+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'decorator_examples' appears similar to 'decorator_examples'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 157,
          "column": 0,
          "end_line": 177,
          "end_column": 26,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647934+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'timer_decorator' appears similar to 'timer_decorator'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 160,
          "column": 4,
          "end_line": 169,
          "end_column": 22,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647946+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'wrapper' appears similar to 'wrapper'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 162,
          "column": 8,
          "end_line": 168,
          "end_column": 25,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647958+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'slow_function' appears similar to 'slow_function'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 172,
          "column": 4,
          "end_line": 175,
          "end_column": 21,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647971+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 190,
          "column": 0,
          "end_line": 228,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.647982+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'function_with_unused_vars' appears similar to 'function_with_unused_vars'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 40,
          "column": 0,
          "end_line": 48,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648014+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 58,
          "column": 0,
          "end_line": 61,
          "end_column": 31,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648026+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '__post_init__' appears similar to '__post_init__'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 23,
          "column": 4,
          "end_line": 28,
          "end_column": 43,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648038+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function '_find_user_by_email' appears similar to '_find_user_by_email'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 53,
          "column": 4,
          "end_line": 58,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648068+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'safe_file_operation' appears similar to 'safe_file_operation'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 74,
          "column": 0,
          "end_line": 85,
          "end_column": 31,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648097+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'process_data_efficiently' appears similar to 'process_data_efficiently'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 88,
          "column": 0,
          "end_line": 100,
          "end_column": 5,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648107+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'main' appears similar to 'main'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 103,
          "column": 0,
          "end_line": 125,
          "end_column": 44,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648118+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'add_processor' appears similar to '_delete_user'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 40,
          "column": 4,
          "end_line": 43,
          "end_column": 19,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648153+00:00"
        },
        {
          "rule_id": "duplicate_function",
          "category": "ai_code",
          "severity": "warning",
          "message": "Function 'get_user_by_id' appears similar to 'safe_get_user_by_email'",
          "file_path": "sample-code/simple/clean_code.py",
          "line": 35,
          "column": 4,
          "end_line": 42,
          "end_column": 92,
          "description": null,
          "code_snippet": null,
          "suggested_fix": {
            "description": "Consider extracting common logic into a shared function",
            "replacement_code": "# Extract common patterns into reusable functions",
            "can_auto_fix": false,
            "confidence": 0.0,
            "instructions": null
          },
          "impact": {
            "performance": -0.05,
            "security_risk": 0.0,
            "carbon_impact": 0.0,
            "maintainability": -0.8,
            "cost_impact": 0.0
          },
          "rule_name": "Potential Duplicate Function",
          "rule_description": "Function appears similar to another function",
          "references": [],
          "tags": [],
          "ai_generated": false,
          "ai_confidence": null,
          "created_at": "2025-06-07T21:37:25.648340+00:00"
        }
      ],
      "metadata": {
        "file_path": "sample-code/simple/clean_code.py",
        "file_size": 3456,
        "line_count": 129
      }
    }
  ],
  "metadata": {}
}